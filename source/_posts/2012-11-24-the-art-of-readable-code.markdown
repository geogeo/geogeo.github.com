---
layout: post
title: "The Art of Readable Code"
date: 2012-11-24 00:02
comments: true
categories: ["读书笔记"]
---

**这本书的一个核心原则我觉得这样总结非常贴切**
>如果你的代码不得不加注释才能让人快速理解, 那么可读性是有问题的

反过来讲这个观点意思是, **一个可读性好的代码, 需要理解它的话, 通过看代码和阅读注释花费的时间应该相当的**.

### 那么什么时候才需要注释呢?
- 编程时的一些想法, 比如为什么要这么实现而不是另外一种常见的方式
- 总结性的描述, 注释一个method, class,或者一长段代码. 让别人只是想扫一眼就知道这大段代码主要是干嘛的. 当然如果method名也很明显的情况下显然注释还可以省略.
- TODO tag


### 那么应该如何做才能使理解代码的时间最少?
- 使用解释性的方法和变量名
- 避免多重嵌套, 使用提前返回或continue
- 使用自然语言逻辑, 比如 ``if you are little then 18``是自然语言逻辑顺序, 那么程序写成 ``if 18 > your_age`` 明显是不符合语言习惯的, 写成`` if your_age < 18`` 多亲切.
- 少使用临时变量, 减少变量作用域, 太多作用域大的变量的话, 读者要看懂代码必须在这个作用域内, 跟踪所有变量的值. 不是人人都是Sheldon, OK?
- 一次做一件事, 一段代码只完成一个功能, 避免来回切换
- YAGNI(You Ain't Gona Need It) 如果此功能现在没有,不要弄进来
- 使用库函数(每天花15分钟阅读库函数这个建议很好).
